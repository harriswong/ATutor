<?php
/****************************************************************/
/* ATutor														*/
/****************************************************************/
/* Copyright (c) 2002-2008 by Greg Gay, Cindy Qi Li, 			*/
/* & Harris Wong												*/
/* Adaptive Technology Resource Centre / University of Toronto  */
/* http://atutor.ca												*/
/*                                                              */
/* This program is free software. You can redistribute it and/or*/
/* modify it under the terms of the GNU General Public License  */
/* as published by the Free Software Foundation.				*/
/****************************************************************/
// $Id: QTIImport.class.php 7448 2008-07-31 13:53:20Z harris $
define('AT_INCLUDE_PATH', '../../');
require(AT_INCLUDE_PATH.'classes/testQuestions.class.php');

/**
* QTIImport
* Class for prehandling the POST values before importing each QTI question into ATutor
* Some definitions for the QTI question type:
*	1	Multiple choice
*	2	True/false
*	3	Open ended
*	4	Likert
*	5	Simple Matching
*	6	Ordering
*	7	Multiple Answers
*	8	Graphical Matching
* @access	public
* @author	Harris Wong
*/
class QTIImport {
	var $_POST = array();
	var $qid  = array();		//store the question_id that is generated by this import

	//Constructor
	function QTIImport($_POST){
		global $addslashes;
		//save guard the post values
		$_POST['required']    = intval($_POST['required']);
		$_POST['question']    = trim($_POST['question']);
		$_POST['category_id'] = intval($_POST['category_id']);
		$_POST['feedback'] = trim($_POST['feedback']);

		//assign answers
		if (sizeof($_POST['answers']) > 1){
			$_POST['answer'] = $_POST['answers'];
		} elseif (sizeof($_POST['answers'])==1) {
			$_POST['answer'] = intval($_POST['answers'][0]);
		}
		$this->_POST = $_POST;
	}

	
	//Decide which question type to import based in the integer
	function importQuestionType($question_type){
		$qti_obj = TestQuestions::getQuestion($question_type);
		$qid = $qti_obj->importQTI($this->_POST);
		if ($qid  > 0) {
			$this->qid = $qid;
		}
	}

}
?>